CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)

PROJECT(fteik)
ENABLE_LANGUAGE(Fortran)
ENABLE_LANGUAGE(C)
ENABLE_LANGUAGE(CXX)
ENABLE_TESTING()

SET(FTEIK_VERSION_MAJOR 1)
SET(FTEIK_VERSION_MINOR 1)
SET(FTEIK_VERSION_PATCH 0)
SET(FTEIK_VERSION ${FTEIK_VERSION_MAJOR}.${FTEIK_VERSION_MINOR}.${FTEIK_VERSION_PATCH})

# Beat CMake into submissions w.r.t. Fortran modules
SET(Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/modules)
SET(CMAKE_Fortran_MODULE_DIRECTORY ${Fortran_MODULE_DIRECTORY})
# Add modules for finding requisites
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMakeModules)
# Testing directory
SET(CMAKE_TESTING_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/testing)
# Output directory for libraries and binaries
SET(CMAKE_BINARY_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib)

SET(ORIGINAL_SRC refsrc/fteik.f90 refsrc/fteik2d.F90 refsrc/lay2vel.f90)
SET(UTILS_SRC h5io.c h5io.F90 io.c memory.F90 os.c xdmf.c)# xdmfOri.c)
# Order matters here
SET(F90_SRC constants.F90 ipps.F90 model.F90 source.F90 receiver.F90 localSolver.F90 solver.F90 solver2D.F90 locate.F90)
SET(NEW_SRC fwrapper.c sort.c ${F90_SRC} modules.F90 graph3d.F90
            autoCode.f90 fteik_utils.F90 solveEikonal.F90)
IF (FTEIK_USE_H5)
  SET(NEW_SRC ${NEW_SRC} h5io_utils.c)
ENDIF (FTEIK_USE_H5)
IF (FTEIK_USE_MPI)
  SET(NEW_SRC ${NEW_SRC} fteik_mpi.F90)
ENDIF()
IF (FTEIK_USE_INTEL)
  ADD_DEFINITIONS(-DFTEIK_FORTRAN_USE_INTEL)
  #ADD_DEFINITIONS(-WF,-DFTEIK_FORTRAN_USE_INTEL) # IBM XLF
ENDIF()
IF (FTEIK_USE_MPI)
  ADD_DEFINITIONS(-DFTEIK_FORTRAN_USE_MPI)
ENDIF()
IF (FTEIK_USE_BOOST)
  #ADD_DEFINITIONS(-DFTEIK_USE_BOOST)
ENDIF()
SET(SRCS ${ORIGINAL_SRC} ${NEW_SRC} ${UTILS_SRC})


INCLUDE_DIRECTORIES(
  include
  ${XML2_INCLUDE_DIR}
  ${INIPARSER_INCLUDE_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}/unitTests
)
IF (FTEIK_USE_MPI)
   INCLUDE_DIRECTORIES(${MPI_C_INCLUDE_PATH} ${MPI_Fortran_INCLUDE_PATH})
ENDIF (FTEIK_USE_MPI)
IF (FTEIK_USE_BOOST)
   INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIR})
ENDIF(FTEIK_USE_BOOST)

IF (FTEIK_USE_H5)
  INCLUDE_DIRECTORIES(${H5_C_INCLUDE_DIR})
ENDIF(FTEIK_USE_H5)
IF (FTEIK_USE_INTEL)
  INCLUDE_DIRECTORIES(${IPP_INCLUDE_DIR})
ENDIF(FTEIK_USE_INTEL)

ADD_SUBDIRECTORY(include)

ADD_EXECUTABLE(fteik fteik.c)
ADD_EXECUTABLE(xtest test.c)

ADD_LIBRARY(fteik_shared SHARED ${SRCS})
#ADD_LIBRARY(fteik_static STATIC ${SRCS})

SET_TARGET_PROPERTIES(xtest PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
IF (FTEIK_USE_H5)
  SET(LIB_ALL fteik_shared ${H5_LIBRARY} ${XML2_LIBRARY} ${INIPARSER_LIBRARY})
ELSE()
  SET(LIB_ALL fteik_shared ${XML2_LIBRARY})
ENDIF()
IF (FTEIK_USE_INTEL)
  SET(LIB_ALL ${LIB_ALL} ${IPP_LIBRARY})
ENDIF(FTEIK_USE_INTEL)
IF (FTEIK_USE_MPI)
  SET(LIB_ALL ${LIB_ALL} ${MPI_Fortran_LIBRARIES} ${MPI_C_LIBRARIES})
ENDIF()
SET(LIB_ALL ${LIB_ALL} -ldl -lstdc++)

TARGET_LINK_LIBRARIES(xtest ${LIB_ALL})

IF (FTEIK_USE_BOOST)
   ADD_EXECUTABLE(utils_test unitTests/tests.c unitTests/fteikGraph.cpp graph.f90)
ELSE()
   ADD_EXECUTABLE(utils_test unitTests/tests.c graph.f90)
ENDIF()
ADD_EXECUTABLE(loc_test unitTests/loctest.c)
ADD_EXECUTABLE(loh2d examples/lot2d.c)
SET_TARGET_PROPERTIES(utils_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
SET_TARGET_PROPERTIES(loc_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
SET_TARGET_PROPERTIES(loh2d PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
SET_TARGET_PROPERTIES(fteik PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
TARGET_LINK_LIBRARIES(utils_test ${LIB_ALL})
TARGET_LINK_LIBRARIES(loc_test ${LIB_ALL})
TARGET_LINK_LIBRARIES(loh2d ${LIB_ALL})
TARGET_LINK_LIBRARIES(fteik ${LIB_ALL})
ADD_TEST(NAME utils_test
         WORKING_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY}
         COMMAND utils_test)
ADD_TEST(NAME loc_test
         WORKING_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY}
         COMMAND loc_test)

#------------------------------------------------------------------------------#
#                                   CPack Packaging                            #
#------------------------------------------------------------------------------#
SET(CPACK_PACKAGE_NAME "fteik")
SET(CPACK_PACKAGE_VENDOR "N/A")
SET(CPACK_PACKAGE_CONTACT "bakerb845@gmail.com")
SET(CPACK_PACKAGE_LICENSE "MIT")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "A parallel fast sweeping Eikonal solver for strongly heterogeneous media.")
SET(CPACK_PACKAGE_VERSION_MAJOR ${FTEIK_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${FTEIK_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${FTEIK_VERSION_PATCH})
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
#IF (WIN32 AND NOT UNIX)

#ELSE(WIN32 AND NOT UNIX)
  SET(CPACK_GENERATOR "TGZ")
  SET(CPACK_SOURCE_GENERATOR TGZ)
  SET(CPACK_SOURCE_PACKAGE_FILE_NAME "fteik-${FTEIK_VERSION}" )
  #SET(CPACK_SOURCE_IGNORE_FILES ~$ .svn ${CPACK_SOURCE_IGNORE_FILES} )
#ENDIF(WIN32 AND NOT UNIX)
INCLUDE(CPack)

#------------------------------------------------------------------------------#
#                              Configuration Details                           #
#------------------------------------------------------------------------------#
SET(FTEIK_LIBRARY fteik)
SET(INCLUDE_INSTALL_DIR include/) #${INCLUDE_DIRECTORIES}) #$include/ ... CACHE)
SET(LIB_INSTALL_DIR lib/)
SET(SYSCONFIG_INSTALL_DIR etc/fteik/)
#SET(LIB_INSTALL_DIR ${LIBRARY_OUTPUT_PATH})
INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(${CMAKE_MODULE_PATH}/Find_fteik.cmake.in
                              ${CMAKE_BINARY_DIR}/Find_fteik.cmake
                              INSTALL_DESTINATION ${LIB_INSTALL_DIR}/fteik/cmake
                              PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)
WRITE_BASIC_PACKAGE_VERSION_FILE(${LIBRARY_OUTPUT_PATH}/fteikConfigVersion.cmake #fteik-config.version.cmake
                                 #${CMAKE_BINARY_DIR}/fteik-config-version.cmake
                                 VERSION ${FTEIK_VERSION} 
                                 COMPATIBILITY SameMajorVersion) #ExactVersion)
SET(TARGET_NAMES fteik_shared)# fteik_static)
INSTALL(TARGETS ${TARGET_NAMES}
        PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_WRITE GROUP_READ WORLD_EXECUTE WORLD_WRITE WORLD_READ
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
INSTALL(FILES
        ${CMAKE_BINARY_DIR}/Find_fteik.cmake
        ${LIBRARY_OUTPUT_PATH}/fteikConfigVersion.cmake
        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/fteik/cmake)

