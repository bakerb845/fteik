CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)

PROJECT(fteik)
ENABLE_LANGUAGE(Fortran)
ENABLE_LANGUAGE(C)
ENABLE_LANGUAGE(CXX)
ENABLE_TESTING()

# Beat CMake into submissions w.r.t. Fortran modules
SET(Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/modules)
SET(CMAKE_Fortran_MODULE_DIRECTORY ${Fortran_MODULE_DIRECTORY})
# Add modules for finding requisites
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMakeModules)
# Testing directory
SET(CMAKE_TESTING_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/testing)
# Output directory for libraries and binaries
SET(CMAKE_BINARY_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib)

SET(ORIGINAL_SRC fteik.f90)
SET(UTILS_SRC h5io.F90 h5io.c io.c memory.F90 os.c xdmf.c)
# Order matters here
SET(F90_SRC constants.F90 model.F90 source.F90 receiver.F90 localSolver.F90 solver.F90 locate.F90)
SET(NEW_SRC graph.c sort.c ${F90_SRC} modules.F90 graph.f90 fteikGraph.cpp
            autoCode.f90  fteik_utils.F90 solveEikonal.F90)
IF (FTEIK_USE_H5)
  SET(NEW_SRC ${NEW_SRC} h5io_utils.c)
ENDIF (FTEIK_USE_H5)
IF (FTEIK_USE_MPI)
  SET(NEW_SRC ${NEW_SRC} fteik_mpi.F90)
ENDIF()
IF (FTEIK_USE_INTEL)
  ADD_DEFINITIONS(-DFTEIK_FORTRAN_USE_INTEL)
  #ADD_DEFINITIONS(-WF,-DFTEIK_FORTRAN_USE_INTEL) # IBM XLF
ENDIF()
IF (FTEIK_USE_MPI)
  ADD_DEFINITIONS(-DFTEIK_FORTRAN_USE_MPI)
ENDIF()
SET(SRCS ${ORIGINAL_SRC} ${NEW_SRC} ${UTILS_SRC})


INCLUDE_DIRECTORIES(
  include
  ${BOOST_INCLUDE_DIR}
  ${XML2_INCLUDE_DIR}
)
IF (FTEIK_USE_MPI)
   INCLUDE_DIRECTORIES(${MPI_C_INCLUDE_PATH} ${MPI_Fortran_INCLUDE_PATH})
ENDIF (FTEIK_USE_MPI)

IF (FTEIK_USE_H5)
  INCLUDE_DIRECTORIES(${H5_C_INCLUDE_DIR})
ENDIF(FTEIK_USE_H5)
IF (FTEIK_USE_INTEL)
  INCLUDE_DIRECTORIES(${IPP_INCLUDE_DIR})
ENDIF(FTEIK_USE_INTEL)

ADD_SUBDIRECTORY(include)

ADD_EXECUTABLE(xtest test.c)

ADD_LIBRARY(fteik_shared SHARED ${SRCS})
#ADD_LIBRARY(fteik_static STATIC ${SRCS})

SET_TARGET_PROPERTIES(xtest PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
IF (FTEIK_USE_H5)
  SET(LIB_ALL fteik_shared ${H5_LIBRARY} ${XML2_LIBRARY})
ELSE()
  SET(LIB_ALL fteik_shared ${XML2_LIBRARY})
ENDIF()
IF (FTEIK_USE_INTEL)
  SET(LIB_ALL ${LIB_ALL} ${IPP_LIBRARY})
ENDIF(FTEIK_USE_INTEL)
IF (FTEIK_USE_MPI)
  SET(LIB_ALL ${LIB_ALL} ${MPI_Fortran_LIBRARIES} ${MPI_C_LIBRARIES})
ENDIF()

TARGET_LINK_LIBRARIES(xtest ${LIB_ALL})

ADD_EXECUTABLE(utils_test unitTests/tests.c)
ADD_EXECUTABLE(loc_test unitTests/loctest.c)
SET_TARGET_PROPERTIES(utils_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
SET_TARGET_PROPERTIES(loc_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
TARGET_LINK_LIBRARIES(utils_test ${LIB_ALL})
TARGET_LINK_LIBRARIES(loc_test ${LIB_ALL})
ADD_TEST(NAME utils_test
         WORKING_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY}
         COMMAND utils_test)
ADD_TEST(NAME loc_test
         WORKING_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY}
         COMMAND loc_test)

SET(CPACK_PACKAGE_NAME "fteik")
SET(CPACK_PACKAGE_LICENSE "MIT")
